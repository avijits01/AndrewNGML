import numpy as np
import matplotlib.pyplot as py
a = np.genfromtxt('ex1data2.txt',dtype=float,delimiter=',')
def multicostf(x,y,theta):
    n=x.shape[1]
    theta = theta.reshape(n,1)
    s=0
    m=x.shape[0]
    h= lambda x: x.transpose().dot(theta)
    for i in range (0,m):
        s=(h(x[i])-y[i])**2+s
    return ((1/(2*m))*s)        
    
def normalisation(x):
    n=x.shape[1]
    m=x.shape[0]
    for i in range(0,n):
        mu=x[:,i].mean()
        sigma=np.std(x[:,i])
        for j in range(0,m): #m are number of training example
            x[j,i]=(x[j,i]-mu)/sigma   
    return x        
        
x=a[:,0:2]
y=a[:,2:3]
def gradm(x,y,theta,a,iterations):
    arr=np.array([[0,0,0,0]])
    x=normalisation(x)
    y=normalisation(y)
    theta =theta.reshape(3,1)
    m=x.shape[0]
    one=np.ones(m)
    one=one.reshape(47,1)
    x=np.hstack((one,x))
    n=x.shape[1]
    for i in range(0,iterations):
        s=0
        for j in range (0,m):
            h = np.dot(x[j],theta)
            s=((h-y[j])*x[j])+s
        s=s.reshape(n,1)    
        theta=theta-((s*a)/m)
        c=multicostf(x,y,theta)
        temp = np.append(theta,c)
        arr=np.vstack((arr,temp))
    return arr
t=gradm(x,y,theta=np.array([[0,0,0]]),a=0.01,iterations=1000)
te=t[:,3]
te=np.delete(te,0)
value=np.argmin(te)
theta=t[value,0:2]
